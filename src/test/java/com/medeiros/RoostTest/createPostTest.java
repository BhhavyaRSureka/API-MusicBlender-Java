// ********RoostGPT********
/*
Test generated by RoostGPT for test ReatAssured-Test using AI Type Open AI and AI Model gpt-4

Test generated for /api/customer/crm/create_post for http method type POST in rest-assured framework

RoostTestHash=89af80582f


*/

// ********RoostGPT********
package com.medeiros.RoostTest;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class createPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/com/medeiros/RoostTest/createPostTest.csv");
    }

  
    @Test  
    public void createPost_Test() {
        this.setUp();
        for (Map<String, String> map : envList) {
          RestAssured.baseURI = map.get("BASE_URL");  
  
                Response response = given()
				.pathParam("company", map.get("company") != null ? map.get("company") : "")
				.pathParam("email", map.get("email") != null ? map.get("email") : "")
				.pathParam("first_name", map.get("first_name") != null ? map.get("first_name") : "")
				.pathParam("last_name", map.get("last_name") != null ? map.get("last_name") : "")
				.pathParam("address", map.get("address") != null ? map.get("address") : "")
				.pathParam("zip_code", map.get("zip_code") != null ? map.get("zip_code") : "")
				.pathParam("city", map.get("city") != null ? map.get("city") : "")
				.pathParam("iban", map.get("iban") != null ? map.get("iban") : "")
				.pathParam("phone_number", map.get("phone_number") != null ? map.get("phone_number") : "")
				.pathParam("description", map.get("description") != null ? map.get("description") : "")
				.pathParam("external_id", map.get("external_id") != null ? map.get("external_id") : "")
				.header("Authorization", "Bearer " + map.get("AUTH_TOKEN"))
                .when()
                .post("/api/customer/crm/create")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: Create new Crm User");
      
              if (response.jsonPath().get("entries") != null) {      
              if (response.jsonPath().get("entries.first_name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.first_name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.last_name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.last_name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.email") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.email"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.company_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.company_id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.address") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.address"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.zip_code") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.zip_code"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.city") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.city"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.iban") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.iban"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("entries.id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("entries.id"), instanceOf(Integer.class));  
          }
  
          }
				}
  
            }  
    }
}
